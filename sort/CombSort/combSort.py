from typing import List
# combSort.py

# |---------------------|
# [2] [5] [1] [8] [7] [3] [4]
#     |---------------------|
# [2] [4] [1] [8] [7] [3] [5]
# |-------------|
# [2] [4] [1] [8] [7] [3] [5]
#     |-------------|
# [2] [4] [1] [8] [7] [3] [5]
#         |-------------|
# [2] [4] [1] [8] [7] [3] [5]
#             |-------------|
# [2] [4] [1] [5] [7] [3] [8]
# |---------|
# [1] [4] [2] [5] [7] [3] [8]
#     |---------|
# [1] [4] [2] [5] [7] [3] [8]
#         |---------|
# [1] [4] [2] [5] [7] [3] [8]
#             |---------|
# [1] [4] [2] [3] [7] [5] [8]
#                 |---------|
# [1] [4] [2] [3] [7] [5] [8]
# |-----|
# [1] [4] [2] [3] [7] [5] [8]
#     |-----|
# [1] [2] [4] [3] [7] [5] [8]
#         |-----|
# [1] [2] [3] [4] [7] [5] [8]
#             |-----|
# [1] [2] [3] [4] [7] [5] [8]
#                 |-----|
# [1] [2] [3] [4] [5] [7] [8]
#                     |-----|
# [1] [2] [3] [4] [5] [7] [8]
# |-----|
# [1] [2] [3] [4] [5] [7] [8]
#     |-----|
# [1] [2] [3] [4] [5] [7] [8]
#         |-----|
# [1] [2] [3] [4] [5] [7] [8]
#             |-----|
# [1] [2] [3] [4] [5] [7] [8]
#                 |-----|
# [1] [2] [3] [4] [5] [7] [8]
#                     |-----|
# [1] [2] [3] [4] [5] [7] [8]

def comb_sort(numbers: List[int]) -> List[int]:

    len_numbers = len(numbers)
    gap = len_numbers
    swapped = True

    while gap != 1 or swapped:
        gap = int(gap / 1.3)
        if gap < 1:
            gap = 1        
        swapped = False

        for i in range(0, len_numbers - gap):
            if numbers[i] > numbers[i + gap]:
                numbers[i], numbers[i + gap] = numbers[i + gap], numbers[i]
                swapped = True

    return numbers

if __name__ == '__main__':
    import random
    nums = [random.randint(0, 1000) for i in range(10)]

    print('[1]')
    print(nums)
    print('-' * 100)

    news_nums = comb_sort(nums)
    print(news_nums)